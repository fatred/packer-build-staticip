### Unattended Installation
d-i auto-install/enable boolean true
d-i debconf/priority select critical

### Localization
d-i debian-installer/locale string en_US.UTF-8
d-i localechooser/supported-locales multiselect en_US.UTF-8, de_DE.UTF-8
d-i console-setup/ask_detect boolean false
d-i keyboard-configuration/xkb-keymap select us

### Network configuration
d-i netcfg/choose_interface select auto
d-i netcfg/hostname string packer-base-ubuntu-1804
d-i netcfg/get_hostname string packer-base-ubuntu-1804
# d-i netcfg/get_domain string mydomain.net     # SENT IN PRESEED BOOT_COMMAND
d-i netcfg/dhcp_options select Configure network manually
d-i hw-detect/load_firmware boolean true

# Static network configuration.
# d-i netcfg/get_nameservers string 192.168.1.1
# d-i netcfg/get_ipaddress string 192.168.1.50
# d-i netcfg/get_netmask string 255.255.255.0
# d-i netcfg/get_gateway string 192.168.1.1
# d-i netcfg/confirm_static boolean true

### Mirror settings
d-i mirror/country string manual
d-i mirror/http/hostname string archive.ubuntu.com
d-i mirror/http/mirror select archive.ubuntu.com
d-i mirror/http/directory string /ubuntu
# d-i mirror/http/proxy string http://192.168.1.3:8080   # SENT IN PRESEED BOOT_COMMAND

### Account setup
d-i passwd/root-login boolean true
d-i passwd/root-password-crypted password $6well_cool_crypted_password
d-i passwd/shadow boolean true

# Create packer user account.
d-i passwd/make-user boolean true
d-i passwd/user-fullname string packer
d-i passwd/username string packer
d-i passwd/user-password password packer
d-i passwd/user-password-again password packer
d-i user-setup/allow-password-weak boolean true
d-i user-setup/encrypt-home boolean false
d-i passwd/user-default-groups packer sudo
d-i passwd/user-uid string 900

### Clock and time zone setup
d-i clock-setup/utc boolean true
d-i time/zone string Etc/UTC
d-i clock-setup/ntp boolean true
# d-i clock-setup/ntp-server string 192.168.1.2      # SENT IN PRESEED BOOT_COMMAND

### Do NOT install on the USB stick(!)
#
# The Debian installer will install on the first disk it finds which can
# sometimes be the USB stick itself. Work around this by rolling our own auto
# detect logic which disallows installing on USB devices.
d-i partman/early_command string \
  USBDEV_LIST="$(mktemp)"; \
  list-devices usb-partition | sed "s/\(.*\)./\1/" > "$USBDEV_LIST"; \
  BOOTDEV="$(list-devices disk | grep -vf "$USBDEV_LIST" | head -n 1)"; \
  debconf-set partman-auto/disk "$BOOTDEV"; \
  debconf-set grub-installer/bootdev "$BOOTDEV"; \
  while /bin/true; do sleep 0.01; rm -f /target/etc/grub.d/30_os-prober; done &

### Partitioning
d-i preseed/early_command string umount /media || true
d-i partman-auto/method string lvm
d-i partman-auto-lvm/guided_size string max
d-i partman-lvm/device_remove_lvm boolean true
d-i partman-lvm/confirm boolean true
d-i partman-lvm/confirm_nooverwrite boolean true
d-i partman-auto-lvm/new_vg_name string main
d-i partman-md/device_remove_md boolean true
d-i partman-md/confirm boolean true
d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true
d-i partman-basicmethods/method_only boolean false

### GPT
d-i partman-basicfilesystems/choose_label string gpt
d-i partman-basicfilesystems/default_label string gpt
d-i partman-partitioning/choose_label string gpt
d-i partman-partitioning/default_label string gpt
d-i partman/choose_label string gpt
d-i partman/default_label string gpt

### EFI
d-i partman-efi/non_efi_system boolean true

### Grub
d-i grub-installer/only_debian boolean true
d-i grub-installer/with_other_os boolean true

### Disk layout
# https://www.bishnet.net/tim/blog/2015/01/29/understanding-partman-autoexpert_recipe/
d-i partman-auto/expert_recipe string custom-lvm :: \
  512 512 512 xfs \
    $primary{ } $bootable{ } method{ format } format{ } use_filesystem{ } \
    filesystem{ xfs } mountpoint{ /boot } \
    . \
  500 10000 -1 xfs \
    $primary{ } method{ lvm } device{ /dev/sda2 } \
    vg_name{ vg00 } \
    . \
  2048 4090 4096 linux-swap \
    $lvmok{ } in_vg{ vg00 } lv_name{ swap } method{ swap } format{ } \
    . \
  4096 4090 8192 xfs \
    $lvmok{ } in_vg{ vg00 } lv_name{ varlog } method{ format } format{ } \
    use_filesystem{ } filesystem{ xfs } label{ varlog } mountpoint{ /var/log } \
    . \
  2048 8190 -1 xfs \
    $lvmok{ } in_vg{ vg00 } lv_name{ varlib } method{ format } format{ } \
    use_filesystem{ } filesystem{ xfs } label{ varlib } mountpoint{ /var/lib } \
    . \
  4096 8190 8192 xfs \
    $lvmok{ } in_vg{ vg00 } lv_name{ usr } method{ format } format{ } \
    use_filesystem{ } filesystem{ xfs } label{ usr } mountpoint{ /usr } \
    . \
  2048 4090 4096 xfs \
    $lvmok{ } in_vg{ vg00 } lv_name{ var } method{ format } format{ } \
    use_filesystem{ } filesystem{ xfs } label{ var } mountpoint{ /var } \
    . \
  2048 4090 4096 xfs \
    $lvmok{ } in_vg{ vg00 } lv_name{ tmp } method{ format } format{ } \
    use_filesystem{ } filesystem{ xfs } label{ tmp } mountpoint{ /tmp } \
    . \
  2048 4090 4096 xfs \
    $lvmok{ } in_vg{ vg00 } lv_name{ home } method{ format } format{ } \
    use_filesystem{ } filesystem{ xfs } label{ home } mountpoint{ /home } \
    . \
  2048 2048 2048 xfs \
    $lvmok{ } in_vg{ vg00 } lv_name{ root } method{ format } format{ } \
    use_filesystem{ } filesystem{ xfs } label{ root } mountpoint{ / } \
    . 

### Base system installation
d-i base-installer/install-recommends boolean true
d-i base-installer/kernel/image string linux-generic

### Apt setup
d-i apt-setup/restricted boolean true
d-i apt-setup/universe boolean true
d-i apt-setup/backports boolean true
d-i apt-setup/use_mirror boolean true
d-i apt-setup/services-select multiselect security, updates
d-i apt-setup/security_host string security.ubuntu.com
d-i apt-setup/security_path string /ubuntu

### Package selection
d-i tasksel/first multiselect none
d-i pkgsel/include string open-vm-tools openssh-server git python python3 vim tmux software-properties-common python3-apt # THINGS I WANT IN MY IMAGES
d-i pkgsel/upgrade select full-upgrade
d-i pkgsel/update-policy select none

### Finishing up the installation
d-i preseed/late_command string \
 mount /dev/fd0 /media; \
 cp -r /media /target/custom; \
 in-target sh -c 'lvremove -f --noudevsync main/placeholder || true'; \
 in-target sh -c 'mkdir -p --mode=0700 /root/.ssh && cat /custom/authorized_keys.pub > /root/.ssh/authorized_keys && chmod 0600 /root/.ssh/authorized_keys';  \
 in-target sh -c 'echo "IPv4: \\\4" >> /etc/issue && echo "IPv6: \\\6" >> /etc/issue && echo "" >> /etc/issue'; \
 in-target sh -c 'eject || true'; \
 in-target sh -c 'echo "packer ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/packer'; \
 in-target sh -c 'chmod 440 /etc/sudoers.d/packer';

d-i debian-installer/splash boolean false
d-i cdrom-detect/eject boolean true

### Shutdown machine
d-i finish-install/reboot_in_progress note
# d-i debian-installer/exit/poweroff boolean true
